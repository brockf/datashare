}
test <- rnorm(30,10,5)
estimates <- c()
for (i in 1:1000) {
boot1 <- sample(30, test, replace=T)
estimates <- c(estimates,inner.boot(boot1))
}
sd(estimates)
test <- rnorm(30,10,5)
estimates <- c()
for (i in 1:1000) {
boot1 <- sample(30, test, replace=T)
estimates <- c(estimates,inner.boot(boot1))
}
sd(estimates)
test <- rnorm(30,10,5)
estimates <- c()
for (i in 1:1000) {
boot1 <- sample(30, test, replace=T)
estimates <- c(estimates,inner.boot(boot1))
}
sd(estimates)
test <- rnorm(30,10,5)
estimates <- c()
for (i in 1:1000) {
boot1 <- sample(30, test, replace=T)
estimates <- c(estimates,inner.boot(boot1))
}
sd(estimates)
test <- rnorm(30,10,5)
estimates <- c()
for (i in 1:1000) {
boot1 <- sample(30, test, replace=F)
estimates <- c(estimates,inner.boot(boot1))
}
sd(estimates)
test <- rnorm(30,10,5)
estimates <- c()
for (i in 1:1000) {
boot1 <- sample(30, test, replace=F)
estimates <- c(estimates,inner.boot(boot1))
}
sd(estimates)
test <- rnorm(30,10,5)
estimates <- c()
for (i in 1:1000) {
boot1 <- sample(30, test, replace=F)
estimates <- c(estimates,inner.boot(boot1))
}
sd(estimates)
test <- rnorm(30,10,5)
estimates <- c()
for (i in 1:1000) {
boot1 <- sample(30, test, replace=F)
estimates <- c(estimates,inner.boot(boot1))
}
sd(estimates)
test <- rnorm(30,10,5)
estimates <- c()
for (i in 1:1000) {
boot1 <- sample(30, test, replace=T)
estimates <- c(estimates,inner.boot(boot1))
}
sd(estimates)
test <- rnorm(30,10,5)
estimates <- c()
for (i in 1:1000) {
boot1 <- sample(30, test, replace=T)
estimates <- c(estimates,inner.boot(boot1))
}
sd(estimates)
test <- rnorm(30,10,5)
estimates <- c()
for (i in 1:1000) {
boot1 <- sample(30, test, replace=T)
estimates <- c(estimates,inner.boot(boot1))
}
sd(estimates)
test <- rnorm(30,10,5)
estimates <- c()
for (i in 1:1000) {
boot1 <- sample(30, test, replace=T)
estimates <- c(estimates,inner.boot(boot1))
}
sd(estimates)
test <- rnorm(30,10,5)
estimates <- c()
for (i in 1:1000) {
boot1 <- sample(30, test, replace=T)
estimates <- c(estimates,inner.boot(boot1))
}
sd(estimates)
inner.boot <- function(sample) {
boot2 <- sample(30, sample, replace=T)
mean(boot2)
sd(boot2)
}
test <- rnorm(30,10,5)
estimates <- c()
for (i in 1:1000) {
boot1 <- sample(30, test, replace=T)
estimates <- c(estimates,inner.boot(boot1))
}
sd(estimates)
inner.boot <- function(sample) {
boot2 <- sample(30, sample, replace=T)
cat(sd(boot2))
mean(boot2)
}
test <- rnorm(30,10,5)
estimates <- c()
for (i in 1:1000) {
boot1 <- sample(30, test, replace=T)
estimates <- c(estimates,inner.boot(boot1))
}
sd(estimates)
inner.boot <- function(sample) {
boot2 <- sample(30, sample, replace=T)
cat(sd(boot2))
cat("\n")
mean(boot2)
}
test <- rnorm(30,10,5)
estimates <- c()
for (i in 1:1000) {
boot1 <- sample(30, test, replace=T)
estimates <- c(estimates,inner.boot(boot1))
}
sd(estimates)
var(c(5,5,5))
var(c(5,5,10))
4^2 * 4^2
sqrt(256)
4 * 4
c(4,345,345,63,452)
test <- c(5,435,54,345,45)
test2 <- c(45,543,53,45,64)
sqrt(var(test)*var(test2))
sd(test)*sd(test2)
test <- c(1,3,2,4,5,6,3)
test2 <- c(6,7,5,4,7,8,5)
t.test(test,test2)
?sample
diffs <- c()
for (i in 1:10000) {
sample_test <- sample(test, 7, replace=T)
sample_test2 <- sample(test, 7, replace=T)
diff <- mean(sample_test2) - mean(sample_test)
diffs <- c(diffs, diff)
}
length(diffs[which(diffs > 0)])
length(diffs[which(diffs < 0)])
diffs
diffs <- c()
for (i in 1:10000) {
sample_test <- sample(test, 7, replace=T)
sample_test2 <- sample(test2, 7, replace=T)
diff <- mean(sample_test2) - mean(sample_test)
diffs <- c(diffs, diff)
}
length(diffs[which(diffs > 0)])
9994/10000
1-(9994/10000)
mean(diffs)
sd(diffs)
2.56-(1.96*.769)
2.56+(1.96*.769)
library(boot)
boot.test(test2,test,B=5000)
test <- c(1,3,2,4,5,6,3)
test2 <- c(6,7,5,4,7,8,5)
mean(test2) - mean(test)
diffs <- c()
for (i in 1:10000) {
sample_test <- sample(c(test,test2), 7, replace=T)
sample_test2 <- sample(c(test,test2), 7, replace=T)
diff <- mean(sample_test2) - mean(sample_test)
diffs <- c(diffs, diff)
}
length(diffs[which(diffs >= 2.57)])
75/10000
length(diffs[which(abs(diffs) >= 2.57)])
160/10000
t.test(test,test2)
for (i in 1:100000) {
sample_test <- sample(c(test,test2), 7, replace=T)
sample_test2 <- sample(c(test,test2), 7, replace=T)
diff <- mean(sample_test2) - mean(sample_test)
diffs <- c(diffs, diff)
}
for (i in 1:10000) {
sample_test <- sample(c(test,test2), 7, replace=T)
sample_test2 <- sample(c(test,test2), 7, replace=T)
diff <- mean(sample_test2) - mean(sample_test)
diffs <- c(diffs, diff)
}
cat(paste('p-value: ',length(diffs[which(abs(diffs) >= (mean(test2) - mean(test))]) / 10000))
cat(paste('p-value: ',length(diffs[which(abs(diffs) >= (mean(test2) - mean(test)))] / 10000))
)
cat(paste('p-value: ',length(diffs[which(abs(diffs) >= (mean(test2) - mean(test)))]) / 10000))
for (i in 1:10000) {
sample_test <- sample(c(test,test2), 7, replace=T)
sample_test2 <- sample(c(test,test2), 7, replace=T)
diff <- mean(sample_test2) - mean(sample_test)
diffs <- c(diffs, diff)
}
cat(paste('p-value: ',length(diffs[which(abs(diffs) >= (mean(test2) - mean(test)))]) / 10000))
test <- c(1,3,2,4,5,6,3)
test2 <- c(6,7,5,4,7,8,5)
mean(test2) - mean(test)
t.test(test,test2)
diffs <- c()
for (i in 1:10000) {
sample_test <- sample(c(test,test2), 7, replace=T)
sample_test2 <- sample(c(test,test2), 7, replace=T)
diff <- mean(sample_test2) - mean(sample_test)
diffs <- c(diffs, diff)
}
cat(paste('p-value: ',length(diffs[which(abs(diffs) >= (mean(test2) - mean(test)))]) / 10000))
test <- c(1,3,2,4,5,6,3)
test2 <- c(6,7,5,4,7,8,5)
median(test2) - median(test)
t.test(test,test2)
diffs <- c()
for (i in 1:10000) {
sample_test <- sample(c(test,test2), 7, replace=T)
sample_test2 <- sample(c(test,test2), 7, replace=T)
diff <- median(sample_test2) - median(sample_test)
diffs <- c(diffs, diff)
}
cat(paste('p-value: ',length(diffs[which(abs(diffs) >= (mean(test2) - mean(test)))]) / 10000))
median(test2) - median(test)
diffs
source('~/.active-rstudio-document', echo=TRUE)
ws.data <- left_join(child.data, ws.scores) %>%
filter(age >= 16 & age <= 30, # filter down to just relevant range
source.id == 1) %>% # Just the original norming data
select(-child.id,-source.id) #drop redundant columns
ws.data <- left_join(ws.scores, child.data) %>%
filter(age >= 16 & age <= 30, # filter down to just relevant range
source.id == 1) %>% # Just the original norming data
select(-child.id,-source.id) #drop redundant columns
summary(ws.scores)
summary(child.data)
ws.data <- left_join(ws.scores, child.data) %>%
filter(age >= 16 & age <= 30, # filter down to just relevant range
source.id == 1) %>% # Just the original norming data
select(-child.id,-source.id) #drop redundant columns
ws.data <- left_join(ws.scores, child.data)
?left_join
ws.data <- inner_join(ws.scores, child.data) %>%
filter(age >= 16 & age <= 30, # filter down to just relevant range
source.id == 1) %>% # Just the original norming data
select(-child.id,-source.id) #drop redundant columns
ws.data <- left_join(ws.scores, child.data)
ws.data <- left_join(child.data, ws.scores)
ws.data <- inner_join(child.data, ws.scores)
ws.data <- left_join(child.data, ws.data, by ='id')
ws.data <- left_join(child.data, ws.scores, by ='id')
ws.data <- semi_join(child.data, ws.scores, by = 'id')
View(ws.data)
ws.data <- semi_join(child.data, ws.scores, by = 'id') %>%
filter(age >= 16 & age <= 30, # filter down to just relevant range
source.id == 1) %>% # Just the original norming data
select(-child.id,-source.id) #drop redundant columns
ws.data <- semi_join(child.data, ws.scores, by = 'id')
summary(ws.data)
ws.data <- semi_join(ws.scores, child.data, by = 'id') %>%
filter(age >= 16 & age <= 30, # filter down to just relevant range
source.id == 1) %>% # Just the original norming data
select(-child.id,-source.id) #drop redundant columns
ws.data <- semi_join(ws.scores, child.data, by = 'id')
ws.data <- semi_join(ws.scores, child.data, by = 'id') %>%
filter(age >= 16 & age <= 30, # filter down to just relevant range
source.id == 1) %>% # Just the original norming data
select(-child.id,-source.id)
summary(ws.data)
summary(ws.scores)
summary(child.data)
ws.data <- semi_join(child.data, ws.scores) %>%
filter(age >= 16 & age <= 30, # filter down to just relevant range
source.id == 1) %>% # Just the original norming data
select(-child.id,-source.id) #drop redundant columns
ws.data <- semi_join(child.data, ws.scores)
ws.data
s.data <- semi_join(child.data, ws.scores) %>%
filter(age >= 16 & age <= 30, # filter down to just relevant range
source.id == 1) %>% # Just the original norming data
select(-child.id,-source.id)
ws.data <- semi_join(child.data, ws.scores) %>%
filter(age >= 16 & age <= 30, # filter down to just relevant range
source.id == 1) %>% # Just the original norming data
select(-child.id,-source.id)
ws.data <- semi_join(child.data, ws.scores) %>%
filter(age >= 16 & age <= 30, # filter down to just relevant range
source.id == 1)
ws.data <- semi_join(child.data, ws.scores) %>%
filter(age >= 16 & age <= 30, # filter down to just relevant range
source.id == 1) %>% # Just the original norming data
select(-child.id,-source.id) #drop redundant columns
ws.data <- left_join(child.data, ws.scores) %>%
filter(age >= 16 & age <= 30, # filter down to just relevant range
source.id == 1) %>% # Just the original norming data
select(-child.id,-source.id) #drop redundant columns
ws.data <- semi_join(child.data, ws.scores) %>%
filter(age >= 16 & age <= 30, # filter down to just relevant range
source.id == 1) %>% # Just the original norming data
select(-child.id,-source.id) #drop redundant columns
ws.data <- semi_join(child.data, ws.scores) %>%
filter(age >= 16 & age <= 30, # filter down to just relevant range
source.id == 1)
summary(ws.data)
ws.scores
summary(ws.scores)
ws.data <- semi_join(child.data, ws.scores) %>%
filter(age >= 16 & age <= 30, # filter down to just relevant range
source.id == 1) %>% # Just the original norming data
select(-child.id,-source.id) #drop redundant columns
ws.data <- semi_join(child.data, ws.scores)
summary(ws.data)
ws.data <- semi_join(child.data, ws.scores) %>%
filter(age >= 16 & age <= 30 & source.id == 1)
traceback()
ws.data <- semi_join(child.data, ws.scores) %>%
select(-id)
summary(child.data)
admins <- admin.table %>%
as.data.frame(select(data_id,child_id,age,source_id)) %>%
rename(c(data_id = 'id', child_id = 'child.id', source_id = 'source.id'))
# Get demographic variables for each child
demos <- as.data.frame(select(child.table,id,gender,mom_ed,birth_order)) %>%
rename(c(id = 'child.id')) # Rename id fields
# Join age and demographics together
child.data <- as.tbl(left_join(admins,demos))
summary(child.data)
admins <- admin.table %>%
as.data.frame(select(data_id,child_id,age,source_id)) %>%
rename(c(data_id = 'id', child_id = 'child.id', source_id = 'source.id'))
summary(admins)
admins <- admin.table %>%
as.data.frame(select(data_id,child_id,age,source_id))
summary(admins)
admins <- admin.table %>%
as.data.frame(select(data_id,child_id,age,source_id))
summary(admins)
rename(c(child_id = 'child.id', source_id = 'source.id'))
admins <- admin.table %>%
as.data.frame(select(data_id,child_id,age,source_id)) %>%
rename(c(child_id = 'child.id', source_id = 'source.id'))
demos <- as.data.frame(select(child.table,id,gender,mom_ed,birth_order)) %>%
rename(c(id = 'child.id')) # Rename id fields
# Join age and demographics together
child.data <- as.tbl(left_join(admins,demos))
ws.data <- semi_join(child.data, ws.scores) %>%
filter(age >= 16 & age <= 30, # filter down to just relevant range
source.id == 1) %>% # Just the original norming data
select(-child.id,-source.id) #drop redundant columns
na.median <- function(x) {median(x,na.rm=T)}
theta <- function(x,xdata,na.rm=T) {median(xdata[x],na.rm=na.rm)}
ci.low <- function(x,na.rm=T) {
median(x,na.rm=na.rm) -
quantile(bootstrap(1:length(x),1000,theta,x,na.rm=na.rm)$thetastar,
.025,na.rm=na.rm)}
ci.high <- function(x,na.rm=T) {
quantile(bootstrap(1:length(x),1000,theta,x,na.rm=na.rm)$thetastar,
.975,na.rm=na.rm) - median(x,na.rm=na.rm)}
# Brock: doesn't run properly for me... collapses to one row
#productive.vocab <- ws.data %>%
#  group_by(age,gender) %>%
#  summarise(
#    median = median(productive),
#    ci.l = ci.low(productive),
#    ci.h = ci.high(productive),
#    n = length(productive))
#ws.data$gender <- factor(ws.data$gender)
productive.vocab <- ddply(ws.data, .(age,gender), summarize, median = na.median(productive), ci.l = ci.low(productive), ci.h = ci.high(productive), n = length(productive))
summary(ws.data)
ws.data <- semi_join(child.data, ws.scores) %>%
filter(age >= 16 & age <= 30, # filter down to just relevant range
source.id == 1) %>% # Just the original norming data
select(-child.id,-source.id) #drop redundant columns
ws.data <- left_join(child.data, ws.scores) %>%
filter(age >= 16 & age <= 30, # filter down to just relevant range
source.id == 1) %>% # Just the original norming data
select(-child.id,-source.id) #drop redundant columns
summary(ws.data)
na.median <- function(x) {median(x,na.rm=T)}
theta <- function(x,xdata,na.rm=T) {median(xdata[x],na.rm=na.rm)}
ci.low <- function(x,na.rm=T) {
median(x,na.rm=na.rm) -
quantile(bootstrap(1:length(x),1000,theta,x,na.rm=na.rm)$thetastar,
.025,na.rm=na.rm)}
ci.high <- function(x,na.rm=T) {
quantile(bootstrap(1:length(x),1000,theta,x,na.rm=na.rm)$thetastar,
.975,na.rm=na.rm) - median(x,na.rm=na.rm)}
# Brock: doesn't run properly for me... collapses to one row
#productive.vocab <- ws.data %>%
#  group_by(age,gender) %>%
#  summarise(
#    median = median(productive),
#    ci.l = ci.low(productive),
#    ci.h = ci.high(productive),
#    n = length(productive))
#ws.data$gender <- factor(ws.data$gender)
productive.vocab <- ddply(ws.data, .(age,gender), summarize, median = na.median(productive), ci.l = ci.low(productive), ci.h = ci.high(productive), n = length(productive))
#Show productive vocabulary estimates
head(productive.vocab)
ggplot(productive.vocab,
aes(x=age, y=median,colour=gender,label=gender))+
geom_pointrange(aes(ymin = median-ci.l,
ymax = median+ci.h),
size = .8,
show_guide = FALSE) +
geom_line(size=1) +
scale_x_continuous(breaks=seq(16,30,1),limits=c(16,30.5),
name = "Age (months)")+
scale_y_continuous(name = "Median Productive Vocabulary Size",
limits=c(0,680)) +
theme_bw(base_size=14) +
theme(legend.position="none") +
geom_dl(method=list(dl.trans(x=x +.2),"last.qp",cex=1)) +
scale_color_manual(values = c("#e41a1c","#377eb8"))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
setwd("~/Documents/Academia/Graduate/Studies/ANCAT/Analyses/Fixed Time Window/Informative & Uninformative (19 months) copy/NEW")
load("~/Documents/Academia/Graduate/Studies/ANCAT/Analyses/Fixed Time Window/Informative & Uninformative (19 months) copy/NEW/workspace.RData")
library(psych)
test <- read.clipboard()
test
test <- test[, 1]
test
unfamiliar_agg_response[unfamiliar_agg_response$ParticipantName %in% test, 'ParticipantName']
unfamiliar_agg_response[!unfamiliar_agg_response$ParticipantName %in% test, 'ParticipantName']
test <- read.clipboard(header=F)
test <- test[, 1]
unfamiliar_agg_response[!unfamiliar_agg_response$ParticipantName %in% test, 'ParticipantName']
unfamiliar_agg_response[unfamiliar_agg_response$ParticipantName %in% test, 'ParticipantName']
setwd("~/Documents/Academia/Graduate/Studies/ANCAT/Analyses/Fixed Time Window/Informative & Uninformative (15 months) copy/NEW Deviation-coded")
load("~/Documents/Academia/Graduate/Studies/ANCAT/Analyses/Fixed Time Window/Informative & Uninformative (15 months) copy/NEW Deviation-coded/workspace.RData")
test <- read.clipboard(header=F)
test
test <- test[, 1]
unfamiliar_agg_response[unfamiliar_agg_response$ParticipantName %in% test, 'ParticipantName']
unfamiliar_agg_response[!unfamiliar_agg_response$ParticipantName %in% test, 'ParticipantName']
setwd("~/Documents/Academia/Data Sharing/datashare/ANCAT/Cognition, 2014")
setwd("~/Documents/Academia/Data Sharing/datashare/ANCAT/Cognition 2014/15-months")
setwd("~/Documents/Academia/Data Sharing/datashare/ANCAT/Cognition 2014/15-months")
setwd("~/Documents/Academia/Data Sharing/datashare/ANCAT/Cognition 2014/15-months")
source('~/.active-rstudio-document', echo=TRUE)
save.image("~/Documents/Academia/Data Sharing/datashare/ANCAT/Cognition 2014/15-months/workspace.RData")
setwd("~/Documents/Academia/Data Sharing/datashare/ANCAT/Cognition 2014/19-months")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(condition_means)
setwd("~/Documents/Academia/Data Sharing/datashare/ANCAT/Cognition 2014/19-months")
save.image("~/Documents/Academia/Data Sharing/datashare/ANCAT/Cognition 2014/19-months/workspace.RData")
setwd("~/Documents/Academia/Data Sharing/datashare/ANCAT/Cognition 2014/15-months")
---
source('~/.active-rstudio-document', echo=TRUE)
setwd("~/Documents/Academia/Data Sharing/datashare/ANCAT/Cognition 2014/15-months")
save.image("~/Documents/Academia/Data Sharing/datashare/ANCAT/Cognition 2014/15-months/workspace.RData")
setwd("~/Documents/Academia/Data Sharing/datashare/ANCAT/Cognition 2014/15-months")
familiar_bins <- sequential_bins_analysis(familiar_test_response, data_options, dv = 'Animate',
factor = 'Target', bin_time = 250)
setwd("~/Documents/Academia/Data Sharing/datashare/ANCAT/Cognition 2014/Combined Ages")
setwd("~/Documents/Academia/Data Sharing/datashare/ANCAT/Cognition 2014/Combined Ages")
window_familiar_response_15 <- read.csv('window-familiar-response-15.csv')
window_unfamiliar_response_15 <- read.csv('window-unfamiliar-response-15.csv')
window_familiar_response_19 <- read.csv('window-familiar-response-19.csv')
window_unfamiliar_response_19 <- read.csv('window-unfamiliar-response-19.csv')
# assign age groups
window_familiar_response_15$AgeGroup <- '15-months'
window_unfamiliar_response_15$AgeGroup <- '15-months'
window_familiar_response_19$AgeGroup <- '19-months'
window_unfamiliar_response_19$AgeGroup <- '19-months'
familiar <- rbind(window_familiar_response_15, window_familiar_response_19)
familiar$AgeGroup <- factor(familiar$AgeGroup)
familiar$Target_c <- -.5
familiar[which(familiar$Target == 'Animal'), 'Target_c'] <- .5
familiar$AgeGroup_c <- -.5
familiar[which(familiar$AgeGroup == '19-months'), 'AgeGroup_c'] <- .5
unfamiliar <- rbind(window_unfamiliar_response_15, window_unfamiliar_response_19)
unfamiliar$AgeGroup <- factor(unfamiliar$AgeGroup)
unfamiliar$Condition_c <- -.5
unfamiliar[which(unfamiliar$Condition == 'informative'), 'Condition_c'] <- .5
unfamiliar$AgeGroup_c <- -.5
unfamiliar[which(unfamiliar$AgeGroup == '19-months'), 'AgeGroup_c'] <- .5
# familiar
library(lme4)
model <- lmer(ArcSin ~ Target_c*AgeGroup_c + (1 | Trial) + (1 | ParticipantName), data = familiar)
model_null <- lmer(ArcSin ~ Target_c + AgeGroup_c + (1 | Trial) + (1 | ParticipantName), data = familiar)
anova(model,model_null)
model <- lmer(ArcSin ~ Condition_c*AgeGroup_c + (1 | Trial) + (1 | ParticipantName), data = unfamiliar)
model_null <- lmer(ArcSin ~ Condition_c + AgeGroup_c + (1 | Trial) + (1 | ParticipantName), data = unfamiliar)
anova(model,model_null)
View(unfamiliar)
unfamiliar <- rbind(window_unfamiliar_response_15, window_unfamiliar_response_19)
unfamiliar$AgeGroup <- factor(unfamiliar$AgeGroup)
unfamiliar$Condition_c <- -.5
unfamiliar[which(unfamiliar$Condition == 'Informative'), 'Condition_c'] <- .5
unfamiliar$AgeGroup_c <- -.5
unfamiliar[which(unfamiliar$AgeGroup == '19-months'), 'AgeGroup_c'] <- .5
# familiar
library(lme4)
model <- lmer(ArcSin ~ Target_c*AgeGroup_c + (1 | Trial) + (1 | ParticipantName), data = familiar)
model_null <- lmer(ArcSin ~ Target_c + AgeGroup_c + (1 | Trial) + (1 | ParticipantName), data = familiar)
anova(model,model_null)
# unfamiliar
model <- lmer(ArcSin ~ Condition_c*AgeGroup_c + (1 | Trial) + (1 | ParticipantName), data = unfamiliar)
model_null <- lmer(ArcSin ~ Condition_c + AgeGroup_c + (1 | Trial) + (1 | ParticipantName), data = unfamiliar)
anova(model,model_null)
save.image("~/Documents/Academia/Data Sharing/datashare/ANCAT/Cognition 2014/Combined Ages/workspace.RData")
